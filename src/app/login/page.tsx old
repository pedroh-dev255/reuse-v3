"use client";

import { useState } from "react";
import { useRouter } from "next/navigation";
import { useAlert } from "@/src/components/AlertProvider";


export default function LoginPage() {
    const { showAlert } = useAlert();
    const router = useRouter();
    const [email, setEmail] = useState("");
    const [password, setPassword] = useState("");
    const [error, setError] = useState("");

    const handleLogin = async (e: React.FormEvent) => {
        e.preventDefault();
        setError("");
        try {
            const res = await fetch("/api/auth/login", {
                method: "POST",
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({ email, password }),
            });

            if (res.ok && res.status === 200) {
                const data = await res.json();
                if (!data.token) {
                    showAlert("Token não encontrado na resposta", "error");
                    return;
                }
                showAlert("Login realizado com sucesso!", "success");
                console.log("Login successful:", data);
                router.push("/dashboard");
            } else {
                const data = await res.json();
                showAlert(`Erro ao fazer login: ${data.error}`, "error");
                setError(data.error || "Erro ao fazer login");
            }
        } catch (err) {
            console.error("Login error:", err);
            showAlert("Erro ao conectar ao servidor", "error");
            setError("Erro ao conectar ao servidor");
        }
    };

    return (
        <div className="min-h-screen flex items-center justify-center bg-gray-100">
            <form onSubmit={handleLogin} className="bg-white p-6 rounded-lg shadow-md w-full max-w-sm">
                <h1 className="text-2xl font-bold mb-4 text-center">Login</h1>

                

                <input
                    type="email"
                    placeholder="Email"
                    className="border w-full p-2 rounded mb-3"
                    value={email}
                    onChange={(e) => setEmail(e.target.value)}
                    required
                />

                <input
                    type="password"
                    placeholder="Senha"
                    className="border w-full p-2 rounded mb-3"
                    value={password}
                    onChange={(e) => setPassword(e.target.value)}
                    required
                />

                {error && <p className="text-red-500 text-sm mb-3">{error}</p>}

                <button className="w-full bg-blue-500 hover:bg-blue-600 text-white p-2 rounded">
                Entrar
                </button>

                <p className="mt-3 text-center text-sm">
                Não tem conta?{" "}
                <a href="/register" className="text-blue-500 hover:underline">
                    Cadastre-se
                </a>
                </p>
            </form>
        </div>
    );
}
